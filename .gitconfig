[core]
      editor = vim
      whitespace = trailing-space,space-before-tab
      excludesfile = /Users/tholt/.gitignore
      ignorecase = true
      autocrlf = input
      attributesfile = /Users/twh/.gitattributes
[transfer]
      fsckobjects = true
[receive]
      fsckobjects = true
[pull]
      ff = only
[merge]
      ff = only
      conflictstyle = diff3
[diff]
      colorMoved = zebra
[color]
      ui = auto
[user]
      name = Thomas W. Holt Jr.
      email = twh@pobox.com
[pack]
      useSparse = true
[http]
      postBuffer = 157286400
[fetch]
      fsckobjects = true
      prune = true
      parallel = 0
[rebase]
      autostash = true
      autoSquash = true
[credential]
      helper = osxkeychain
      helper = cache
[push]
      gpgSign = if-asked
      followTags = true
	autoSetupRemote = true
[commit]
      gpgsign = true
[include]
      path = ~/.gitconfig-local
[submodule]
      recurse = true
[maintenance]
      repo = /Users/twh
[init]
      defaultBranch = main
[feature]
      manyFiles = true
[advice]
      detachedHead = false
[alias]
      mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
      synced = "!git pull origin $(git mainbranch) --rebase"
      update = "!git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase"
      squash = "!git rebase -v -i $(git mainbranch)"
      publish = push origin HEAD --force-with-lease
      pub = publish
      co = checkout
      br = branch
      ci = commit
      st = status --short --branch
      unstage = reset HEAD --
      last = log -1 HEAD
      logs = log --show-signature
      l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
      lg = log --graph --oneline --decorate --all
      lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
      source = remote get-url origin
      plog = log @{1}..
      slog = log --pretty=slog
      pslog = log --pretty=slog @{1}..
      dog = log --all --decorate --oneline --graph
      ffpull = pull --ff-only
      ffmerge = merge --ff-only
      gone = ! "git fetch -p && \
            git for-each-ref --format '%(refname:short) %(upstream:track)' \
            | awk '$2 == \"[gone]\" {print $1}' | xargs git branch -D"
      track = "!f() { ([ $# -eq 2 ] && ( echo \"Setting tracking for branch \" $1 \" -> \" $2;git branch --set-upstream $1 $2; ) || ( git for-each-ref --format=\"local: %(refname:short) <--sync--> remote: %(upstream:short)\" refs/heads && echo --Remotes && git remote -v)); }; f"
      cake = log --date=format:'%d %b %Y' --diff-filter=A --name-only --pretty='%n%C(yellow bold)üéÇÔ∏è %ad%Creset by (%C(blue bold)%h%Creset)'
      cloner = clone --recursive
      uncommit = reset --soft HEAD^
      credit = blame
      big-files  = !"git rev-list --objects --all \
                   | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' \
                   | sed -n 's/^blob //p' \
                   | sort -nk2 \
                   | cut -c 1-12,41- \
                   | $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest"
      big-objects = !"git rev-list --all \
                    | parallel git ls-tree -r --long "{}" \
                    | sort -uk3 \
                    | sort -nk4"
	    whatadded = log --diff-filter=A --follow --find-renames=40% --oneline
      birthdate = log --diff-filter=A --follow --find-renames=40% --pretty="format:%as"
[filter "media"]
      required = true
      clean = git media clean %f
      smudge = git media smudge %f
[filter "hawser"]
      clean = git hawser clean %f
      smudge = git hawser smudge %f
      required = true
[filter "lfs"]
      clean = git-lfs clean -- %f
      smudge = git-lfs smudge -- %f
      process = git-lfs filter-process
      required = true
